/* 
  Utility Class: .hoverStateLayer
  Description: This utility class is used to add a hover effect to a text field component.
  It uses pseudo-elements and Tailwind CSS utilities to achieve the desired styling.

  Styles Applied:
  - ::after Pseudo-element:
    - content: An empty string to create the pseudo-element.
    - position: Absolute positioning to cover the entire text field.
    - Dimensions: top, right, bottom, and left set to 0 to cover the entire area.
    - Border Radius: border-top-left-radius and border-top-right-radius set to 4px to match the text field's border radius.
    - Opacity: Initially set to 0 to make the pseudo-element invisible.
    - Pointer Events: Set to none to allow interactions with the underlying text field.
    - Transition: Smooth transition for background-color and opacity over 0.3s with an ease timing function.

  - Hover State:
    - Background Color: Applied using the bg-on-surface utility class from Tailwind CSS.
    - Opacity: Set to 0.8 (using the opacity-8 utility class) to make the pseudo-element visible on hover.
*/

.inputBase {
  @apply relative h-14 w-full rounded-t-[4px] bg-surface-container-highest px-4 pb-2 pt-6 text-on-surface caret-primary transition-textfield duration-200 ease-in focus:outline-none;
}
.labelBase {
  @apply pointer-events-none absolute left-4 right-4 text-left transition-all duration-300 ease-in-out;
}

  .hoverStateLayer {
    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
      opacity: 0;
      pointer-events: none;
      transition:
        background-color 0.3s ease,
        opacity 0.3s ease;
    }
    &:hover::after {
      @apply bg-on-surface opacity-8;
    }
  }
